##########
# netdata
##########
upstream netdata
{
        # netdata instance is listening to this
        server 127.0.0.1:19999;
        keepalive 64;
}

##########
# ntop
##########
upstream ntop_srv
{
        # ntop docker is listening to this
        server 127.0.0.1:3000;
        keepalive 64;
}

server
{
        # nginx listens to this
        listen 80 default_server;

        # listen to everything
        server_name _;

        # return if not cloudflare
        if ($http_cf_ray = "")
        {
            return 444;
        }

        # compress as much shit as we can
        gzip on;
        gzip_proxied any;
        gzip_types *;

        location /
        {
            return 403;
        }

        ##########
        # NETDATA
        ##########

        # redir no slash
        location /netdata
        {
                return 301 /netdata/;
        }
        # proxy to our netdata instance
        location ~ /netdata/(?<ndpath>.*)
        {
                proxy_redirect off;
                proxy_set_header Host $host;

                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_http_version 1.1;
                proxy_pass_request_headers on;
                proxy_set_header Connection "keep-alive";
                proxy_store off;
                proxy_pass http://netdata/$ndpath$is_args$args;

        }

        ##########
        # NTOP
        ##########

        # redir no slash
        location /ntop
        {
                return 301 /ntop/;
        }

        # proxy to our docker container
        location /ntop/
        {
                proxy_pass http://ntop_srv;
        }

        location ~ \.php$
        {
                include snippets/fastcgi-php.conf;
                fastcgi_pass unix://var/run/php/php8.0-fpm.sock;
                fastcgi_read_timeout 10;
        }

        location ~ /\.ht
        {
                deny all;
        }
}
